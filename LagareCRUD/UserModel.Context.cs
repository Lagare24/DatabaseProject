//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LagareCRUD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class user_dbEntities : DbContext
    {
        public user_dbEntities()
            : base("name=user_dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<vw_ViewAllUserColumns> vw_ViewAllUserColumns { get; set; }
    
        public virtual int sp_InsertDataIntoUsers(string firstName, string lastName, Nullable<int> birthYear, Nullable<int> birthMonth, Nullable<int> birthDay, string userName, string password)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthYearParameter = birthYear.HasValue ?
                new ObjectParameter("BirthYear", birthYear) :
                new ObjectParameter("BirthYear", typeof(int));
    
            var birthMonthParameter = birthMonth.HasValue ?
                new ObjectParameter("BirthMonth", birthMonth) :
                new ObjectParameter("BirthMonth", typeof(int));
    
            var birthDayParameter = birthDay.HasValue ?
                new ObjectParameter("BirthDay", birthDay) :
                new ObjectParameter("BirthDay", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertDataIntoUsers", firstNameParameter, lastNameParameter, birthYearParameter, birthMonthParameter, birthDayParameter, userNameParameter, passwordParameter);
        }
    }
}
